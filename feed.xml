<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/blog/</id>
  <link href="http://blog.url.com/blog/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2013-12-03T07:18:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Resources to Level-up to Intermediate Rails Developer</title>
    <link rel="alternate" href="http://blog.url.com/blog/intermediate-ruby-resources.html"/>
    <id>http://blog.url.com/blog/intermediate-ruby-resources.html</id>
    <published>2013-12-03T07:18:00Z</published>
    <updated>2013-12-03T03:22:52-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="resources-to-level-up-to-intermediate-rails-developer"&gt;Resources to Level-up to Intermediate Rails Developer&lt;/h1&gt;

&lt;h2 id="so-youve-read-the-books-done-the-tutorials-and-written-your-own-rails-applications--whats-next--use-these-resources-to-help-you-along-the-way-and-to-further-immerse-yourself-in-the-craft-of-ruby-web-development"&gt;So you’ve read the books, done the tutorials and written your own Rails applications.  What’s next?  Use these Resources to help you along the way, and to further immerse yourself in the craft of ruby web development.&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;“I hear and I forget. I see and I remember. I do and I understand.”
–Confucius&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://everydayrails.com/2010/07/05/intermediate-rails-steps.html"&gt;First: Read this post by Aaron Sumner&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="screencasts"&gt;Screencasts&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://pluralsight.com/training/Courses"&gt;Pluralsight&lt;/a&gt; (PeepCode/TekPub).  PluralSight acquired PeepCode and TekPub which produce excellent premium screencasts on a huge variety of modern web development topics.  The upside is that getting unlimited access to both for $29 a month is a huge bargain, along with a huge library of other courses.  The downsides are that now you can’t download the videos and the streaming video buffering speed is kind of slow.  At the end of this article I’ll show you how college students can get a free 3-month subscription.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://railscasts.com/"&gt;Railscasts&lt;/a&gt; by Ryan Bates.  Railscasts give you a broad overview of the tools in the Rails universe.  Each screencast gives you a brief introduction to a specific concept or gem and how you could use it. It’s kind of uncanny how often you’ll be stuck working on a problem and find that there is a Railscasts on the exact topic. Beginner-friendly but no substitute for getting your hands dirty.  A pro subscription costs $9 a month.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.rubytapas.com/"&gt;RubyTapas&lt;/a&gt; by Avdi Grimm.  Intermediate to Advanced level Ruby-Fu in digestable chunks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.destroyallsoftware.com/screencasts"&gt;Destroy All Software&lt;/a&gt; by Gary Bernhardt.  Here you watch a master programmer at work as he focuses in on software design principles, test driven development and advanced development techniques.  Try not to be intimidated, he works really fast so pause and rewind when you need to.&lt;/p&gt;

&lt;h3 id="blogsnewsletters"&gt;Blogs/Newsletters&lt;/h3&gt;

&lt;p&gt;You should always be informed about news, tips, tricks and new features. Read articles about Ruby on Rails and play with the code samples you’ve read from these articles.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://rubyreflector.com/"&gt;The Ruby Reflector&lt;/a&gt;  Aggregates 709 blogs from the Ruby community in a social news format. &lt;/p&gt;

&lt;p&gt;&lt;a href="http://rubyweekly.com/"&gt;The Ruby Weekly&lt;/a&gt; A free curated weekly roundup of ruby articles&lt;/p&gt;

&lt;p&gt;&lt;a href="http://robots.thoughtbot.com/"&gt;Giant Robots&lt;/a&gt; The blog by web development firm thoughtbot. They have contributed immensely to the Ruby on Rails and web development community, with tools like FactoryGirl, Shoulda and Paperclip.&lt;/p&gt;

&lt;h3 id="code-quizzes"&gt;Code Quizzes&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://rubyquiz.com/]"&gt;http://rubyquiz.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="books"&gt;Books&lt;/h3&gt;

&lt;p&gt;Books are great for deepening your understanding of things like the Ruby Object Model.  Like Confucius say, the most effective way to spend your time will be doing programming, writing code, and coding along while seeing how others write their code.  But don’t be afraid to hit the books in your spare time either.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://majesticseacreature.com/rbp-book/pdfs/rbp_1-0.pdf"&gt;Ruby Best Practices&lt;/a&gt; by Gregory Brown (Free Download)&lt;/p&gt;

&lt;p&gt;Eloquent Ruby by Russ Olsen&lt;/p&gt;

&lt;p&gt;The Rails 4 Way by Obie Fernandez&lt;/p&gt;

&lt;p&gt;Practical Object Oriented Design in Ruby by Sandi Metz&lt;/p&gt;

&lt;p&gt;Rails Antipatterns by Chad Pytel (CEO of thoughbot)&lt;/p&gt;

&lt;p&gt;Crafting Rails Applications by Jose Valim (major rails contributor)&lt;/p&gt;

&lt;p&gt;The Elements of Style by Strunk and White&lt;/p&gt;

&lt;p&gt;Mastery by George Leonard&lt;/p&gt;

&lt;h3 id="free-3-month-subscription-to-pluralsight-for-college-students-through-microsoft"&gt;Free 3-Month Subscription To PluralSight for College Students Through Microsoft&lt;/h3&gt;

&lt;p&gt;Kind of a convoluted process, but worth it.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.dreamspark.com/Product/Product.aspx?productid=21"&gt;Visit Dreamspark and go to Products Pluralsight&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click on Get Verified&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create an Account with a Valid .edu email address&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Verify your school email address &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now you should go back to the Pluralsight Products page, and be signed in with a verified student account&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click on get key&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Open a new tab and visit this link to PluralSight’s Dreamspark offer.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://pluralsight.com/training/offers?cc=Dreamspark"&gt;Paste the key that you got from DreamSpark and register a new account.&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enjoy your free 3 month learning spree.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</content>
  </entry>
  <entry>
    <title>A Moveable Feast</title>
    <link rel="alternate" href="http://blog.url.com/blog/a-moveable-feast.html"/>
    <id>http://blog.url.com/blog/a-moveable-feast.html</id>
    <published>2013-11-27T01:56:00Z</published>
    <updated>2013-12-02T21:50:22-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="a-moveable-feast"&gt;A Moveable Feast&lt;/h1&gt;

&lt;h2 id="to-sharpen-my-design-skills-i-redesigned-the-cover-of-my-favorite-book"&gt;To sharpen my design skills I redesigned the cover of my favorite book.&lt;/h2&gt;

&lt;p&gt;I don’t like the original cover because I think that the deco styles and fonts are cheesy and overstated. I think Hemingway was more plain and simple.&lt;/p&gt;

&lt;p&gt;&lt;img src="images/4/originalcover-a292bde5.jpg" /&gt;
&lt;br /&gt;
I wrote on a fancy paper napkin to get a true scribbled look.  I gathered assets from the web and put them together in photoshop.&lt;/p&gt;

&lt;p&gt;&lt;img src="images/4/assets-5f0b0e56.jpg" /&gt;
The main tricks I learned during this project were how to play with realistic cast shadows for objects.  Here’s how to do it:&lt;/p&gt;

&lt;p&gt;&lt;img src="images/4/screenshot-7d29072f.png" /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Step 1: Make a selection containing only the object you want using the magic wand or pen tool.  Put it on its own layer. You can have photoshop automatically clean up the edges of your selection by going to Layer&amp;gt;Matting.

Step 2:  Right click on the layer of the object you want to shadow and duplicate it.

Step 3:  Set your foreground color to black and black the object out by Cmd-Shift-Del. Make it shadowy by hitting it with Filter&amp;gt;Blur&amp;gt;Gaussian blur between 3-5.

Step 4:  Distort the shadow shape into the perspective you want by hitting Cmd+T then right clicking the object and selecting Distort.  You can skew the image to make it look like it is being cast.

Step 5:  Reduce the opacity of the layer to 30-50%

Bonus: You might want to duplicate the shadow layer and add a layer mask.  You can then drag a gradient so the shadow appears softer as it gets further away.  Set both shadow layers to multiply mode.  Continue to play around, and add more guassian blur until you get the result you want.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here’s how the finished project came out…&lt;/p&gt;

&lt;p&gt;&lt;img src="images/4/moveable_feast-7266fd2f.jpg" /&gt;
“If you are lucky enough to have lived in Paris as a young man, then wherever you go for the rest of your life, it stays with you, for Paris is a moveable feast.”&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Middleman Delivers the Good Stuff</title>
    <link rel="alternate" href="http://blog.url.com/blog/middleman-delivers.html"/>
    <id>http://blog.url.com/blog/middleman-delivers.html</id>
    <published>2013-11-26T18:55:00Z</published>
    <updated>2013-11-26T23:22:13-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="middleman-delivers-the-goods"&gt;Middleman Delivers the Goods&lt;/h1&gt;

&lt;h2 id="middlemanhttpmiddlemanappcom-allows-me-to-greatly-simplify-my-blogging-workflow-it-gives-me-the-flexibility-to-maintain-customize-and-adapt-the-site-if-i-need-to-make-changes-it-also-gives-me-a-big-performance-boost-from-using-static-html--but-most-importantly-i-can-focus-completely-on-writing-content--if-your-blog-will-have-just-a-single-author-who-knows-how-to-code-with-exposure-to-rails-middleman-will-be-ideal-for-you"&gt;&lt;a href="http://middlemanapp.com/"&gt;Middleman&lt;/a&gt; allows me to greatly simplify my blogging workflow. It gives me the flexibility to maintain, customize and adapt the site if I need to make changes. It also gives me a big performance boost from using static HTML.  But most importantly I can focus completely on writing content.  If your blog will have just a single author who knows how to code (with exposure to Rails) Middleman will be ideal for you.&lt;/h2&gt;

&lt;h3 id="writing-workflow"&gt;Writing Workflow&lt;/h3&gt;

&lt;p&gt;By using the extensions &lt;a href="http://middlemanapp.com/blogging"&gt;middleman-blog&lt;/a&gt; and &lt;a href="https://github.com/neo/middleman-gh-pages"&gt;middleman-gh-pages&lt;/a&gt; publishing an article is dead simple.&lt;/p&gt;

&lt;p&gt;I create a new article with a single command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bundle exec middleman article "Launching my blog"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This puts a file in the appropriate location with a YAML “frontmatter” to hold any data I might need.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title: Middleman Delivers the Good Stuff
date: 2013-11-26 18:55 UTC
thumb: "images/2/logcabin_thumb.jpg"
tags: middleman, writing
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From there I can focus completely on writing the content of the article.  &lt;a href="http://daringfireball.net/projects/markdown/basics"&gt;Markdown&lt;/a&gt; let’s me write the article content in a plain text format.&lt;/p&gt;

&lt;p&gt;Writing posts in Markdown is a joy: everything is much easier to read and write without worrying about formatting.  Later it gets converted automatically to HTML syntax.&lt;/p&gt;

&lt;p&gt;Finally when I call:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rake publish
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;the article will build, publish and deploy to production on the web.  That’s it.  No clumsy admin screens or WSYSIWYG editors.  Fewer moving parts.&lt;/p&gt;

&lt;p&gt;Iron Chef Morimoto wrote that “Dashi (Japanese fish stock) takes 10 minutes of active time to create and mostly requires just two ingredients:  cured bonito flakes and kelp.  But what seems simple is in fact subtle and complex.”  Using Middleman to build static sites is a similar experience.  While you will find it to be straighforward and simple, it still requires a touch of finesse under the hood.&lt;/p&gt;

&lt;h3 id="why-use-a-static-site-generator"&gt;Why use a Static Site Generator?&lt;/h3&gt;

&lt;p&gt;For simple sites that don’t require a database: less is more.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Speed:  Static HTML is very fast because the server’s only concern is serving the HTML.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Security:  You can’t hack a plain HTML page&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Scale: Static HTML will handle stress under load from traffic if your article finds its way to the front page of Hacker News&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="why-choose-middleman-over-jekyll"&gt;Why choose Middleman over Jekyll?&lt;/h3&gt;

&lt;p&gt;The core feature of this particular site is blogging.  But Middleman supports static sites of all types.  Jekyll is structured around the idea of “posts” which is quite limiting if you want to build different types of applications.&lt;/p&gt;

&lt;p&gt;More than that though, Middleman sticks to familiar Rails conventions.  You won’t have to learn a new workflow just to generate static sites.  And you can enjoy the benefits to programmer productivity of using a modern tool set.  Rails essentially has the core functions of a static site generator already built in to it already.  But through Middleman you cut out all of the overhead that comes with the Rails framework in order to build traditional dynamic sites.  Middleman is more powerful than Jekyll, but also covers more familiar territory.&lt;/p&gt;

&lt;p&gt;Basically, you get all the good parts that come from the front-end side of Rails.  Common layouts, reusable partials and nesting templating help to promote better code organization while cutting down on the amount of boilerplate and duplication in the code you write.  You can use the asset pipeline and turbolinks too.  As well as CoffeScript and Sass!&lt;/p&gt;

&lt;h3 id="some-setup-issues-i-ran-into"&gt;Some setup issues I ran into&lt;/h3&gt;

&lt;p&gt;I initially had some annoyances getting links to pages and assets working properly from development to deployment. Make sure you brush up on your relative and absolute paths for links.&lt;/p&gt;

&lt;p&gt;I set the following in config.rb:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;activate :relative_assets

# Build-specific configuration
configure :build do
  set :relative_links, true
end
&lt;/code&gt;&lt;/pre&gt;

</content>
  </entry>
  <entry>
    <title>Coding Tips From Abe Lincoln</title>
    <link rel="alternate" href="http://blog.url.com/blog/abe-lincoln.html"/>
    <id>http://blog.url.com/blog/abe-lincoln.html</id>
    <published>2013-11-18T00:00:00Z</published>
    <updated>2013-11-26T10:16:41-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="coding-tips-from-abe-lincoln"&gt;Coding Tips From Abe Lincoln&lt;/h1&gt;

&lt;h2 id="i-decided-to-try-something-zany-in-honor-of-the-150th-anniversary-of-the-gettysburg-address--this-is-the-gettysburg-addresshttpwwwhuffingtonpostcomhuff-wires20131119us--gettysburg-address-text-expressed-as-roughly-ruby-like-pseudo-code"&gt;I decided to try something zany in honor of the 150th Anniversary of the Gettysburg Address.  This is the &lt;a href="http://www.huffingtonpost.com/huff-wires/20131119/us--gettysburg-address-text/"&gt;Gettysburg Address&lt;/a&gt; expressed as roughly Ruby-like pseudo-code.&lt;/h2&gt;

&lt;p&gt;Matz has said that we should write code the same way we would compose an essay. Programmers need to see themselves as proud authors. Our code should communicate to the reader.  Honest Abe knew that clear reasoning and persuasive style went hand in hand to crafting a good finished work…&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;script src="https://gist.github.com/stefanlyew/7595557.js"&gt;&lt;/script&gt;

&lt;p&gt;Abe Lincoln was a badass at using &lt;a href="http://www.theatlantic.com/magazine/archive/2012/02/the-words-that-remade-america/308801/"&gt;the logical structure of language&lt;/a&gt;. Taking apart the speech in this way shows some of the underlying patterns of thought that organize the speech and make it so compact and coherent.  Looking at our code persuasively can help us become more stylistically comfortable at crafting code that is easy for a reader to follow.&lt;/p&gt;

&lt;p&gt;Lincoln’s tight logic and eloquent phrasing of sentences pack quite a wallop.  Look closely and it becomes clear that the Gettysburg Address is structured as a careful step-by-step solution to a hard problem.  The problem he set out to solve was uniting the nation to end the Civil War.  His 272-word speech explains his vision of a solution.  Every sentence packs a dual punch. It maximizes the ability of the reader to follow his train of thought. It also moves forward the logic of what he is trying to accomplish.&lt;/p&gt;

&lt;p&gt;Lincoln was a great writer because he tirelessly refactored line by line and edited draft after draft.  In his spare time he enjoyed studying grammar and syntax to learn the most effective parts of the language.&lt;/p&gt;

&lt;p&gt;At its best, clean code should follow a similar workflow.  I don’t know whether &lt;a href="http://www.codinghorror.com/blog/2008/02/code-isnt-beautiful.html"&gt;code can be beautiful or not&lt;/a&gt;: but it most certainly has the power to get the author’s point across.  This is a power that we as programmers too often neglect. Most of the time we are willing to accept a first draft because “it runs”.  But great programmers write code that maximizes the chance other humans will be able to follow the context.  So the next time you are in a creative slump, clear your mind and picture yourself coding up a plan to save the Union.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>About Me</title>
    <link rel="alternate" href="http://blog.url.com/blog/about.html"/>
    <id>http://blog.url.com/blog/about.html</id>
    <published>1990-09-18T00:00:00Z</published>
    <updated>2013-11-27T00:45:50-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="about-me"&gt;About Me&lt;/h1&gt;

&lt;h2 id="my-name-is-stefan-i-am-a-creative-and-curious-digital-professional-currently-i-am-based-out-of-nyc-what-keeps-me-passionate-about-programming-is-the-opportunity-to-create-things-that-can-help-make-the-lives-of-others-better"&gt;My name is Stefan. I am a creative and curious digital professional. Currently I am based out of NYC. What keeps me passionate about programming is the opportunity to create things that can help make the lives of others better.&lt;/h2&gt;

&lt;h2 id="hire-me"&gt;Hire Me&lt;/h2&gt;

&lt;p&gt;My goal is to build and deploy solid, elegant, and understandable web applications.&lt;/p&gt;

&lt;p&gt;If you like what you’re seeing, and need help with your online presence, you might be interested in hiring me to consult, develop, design, or strategize.&lt;/p&gt;

&lt;h2 id="collaborate-with-me"&gt;Collaborate With Me&lt;/h2&gt;

&lt;p&gt;I have never met another developer that I haven’t learned something from.  In fact, I’ve never met another person I haven’t learned something from.&lt;/p&gt;

&lt;p&gt;I am available to pair program, either physically in NYC or remotely via Skype, TeamViewer and Tmux.  I love getting feedback, positive or negative and refining new approaches and techniques.&lt;/p&gt;

&lt;h2 id="away-from-keyboard"&gt;Away From Keyboard&lt;/h2&gt;

&lt;p&gt;When not coding I am eating.  I love cooking and playing with my food.  Sometimes I play guitar.&lt;/p&gt;

</content>
  </entry>
</feed>
